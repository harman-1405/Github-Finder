{"ast":null,"code":"var _jsxFileName = \"/Users/harmankaur/Desktop/Github-finder/src/context/github/GithubContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from 'react';\nimport githubReducer from './GithubReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const GithubProvider = ({\n  children\n}) => {\n  _s();\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  // Set loading\n  const setLoading = () => dispatch({\n    type: 'SET_LOADING'\n  });\n\n  // Clear users\n  const clearUsers = () => dispatch({\n    type: 'CLEAR_USERS'\n  });\n\n  // Search users\n  const searchUsers = async text => {\n    setLoading();\n    const params = new URLSearchParams({\n      q: text\n    });\n    const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`\n      }\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`GitHub searchUsers error ${response.status}:`, errorText);\n      return;\n    }\n    const {\n      items\n    } = await response.json();\n    dispatch({\n      type: 'GET_USERS',\n      payload: items\n    });\n  };\n\n  // Get single user\n  const getUser = async login => {\n    setLoading();\n    const response = await fetch(`${GITHUB_URL}/users/${login}`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`\n      }\n    });\n    if (response.status === 404) {\n      window.location = '/notfound';\n      return;\n    }\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`GitHub getUser error ${response.status}:`, errorText);\n      return;\n    }\n    const data = await response.json();\n    dispatch({\n      type: 'GET_USER',\n      payload: data\n    });\n  };\n\n  // Get user repos\n  const getUserRepos = async login => {\n    setLoading();\n    const params = new URLSearchParams({\n      sort: 'created',\n      per_page: 10\n    });\n    const response = await fetch(`${GITHUB_URL}/users/${login}/repos?${params}`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`\n      }\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`GitHub getUserRepos error ${response.status}:`, errorText);\n      return;\n    }\n    const data = await response.json();\n    dispatch({\n      type: 'GET_REPOS',\n      payload: data\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(GithubProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = GithubProvider;\nexport default GithubContext;\nvar _c;\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useReducer","githubReducer","jsxDEV","_jsxDEV","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","_s","initialState","users","user","repos","loading","state","dispatch","setLoading","type","clearUsers","searchUsers","text","params","URLSearchParams","q","response","fetch","headers","Authorization","ok","errorText","console","error","status","items","json","payload","getUser","login","window","location","data","getUserRepos","sort","per_page","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harmankaur/Desktop/Github-finder/src/context/github/GithubContext.js"],"sourcesContent":["import { createContext, useReducer } from 'react';\nimport githubReducer from './GithubReducer';\n\nconst GithubContext = createContext();\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nexport const GithubProvider = ({ children }) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  // Set loading\n  const setLoading = () => dispatch({ type: 'SET_LOADING' });\n\n  // Clear users\n  const clearUsers = () => dispatch({ type: 'CLEAR_USERS' });\n\n  // Search users\n  const searchUsers = async (text) => {\n    setLoading();\n\n    const params = new URLSearchParams({ q: text });\n\n    const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`,\n      },\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`GitHub searchUsers error ${response.status}:`, errorText);\n      return;\n    }\n\n    const { items } = await response.json();\n\n    dispatch({\n      type: 'GET_USERS',\n      payload: items,\n    });\n  };\n\n  // Get single user\n  const getUser = async (login) => {\n    setLoading();\n\n    const response = await fetch(`${GITHUB_URL}/users/${login}`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`,\n      },\n    });\n\n    if (response.status === 404) {\n      window.location = '/notfound';\n      return;\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`GitHub getUser error ${response.status}:`, errorText);\n      return;\n    }\n\n    const data = await response.json();\n\n    dispatch({\n      type: 'GET_USER',\n      payload: data,\n    });\n  };\n\n  // Get user repos\n  const getUserRepos = async (login) => {\n    setLoading();\n\n    const params = new URLSearchParams({\n      sort: 'created',\n      per_page: 10,\n    });\n\n    const response = await fetch(`${GITHUB_URL}/users/${login}/repos?${params}`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`,\n      },\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`GitHub getUserRepos error ${response.status}:`, errorText);\n      return;\n    }\n\n    const data = await response.json();\n\n    dispatch({\n      type: 'GET_REPOS',\n      payload: data,\n    });\n  };\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}